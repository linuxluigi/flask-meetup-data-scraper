log:
  level: INFO

entryPoints:
  web:
    # http
    address: ":80"

  web-secure:
    # https
    address: ":443"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "admin@meetup-search.de"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
    web-angular-router:
      rule: "Host(`meetup-search.de`)"
      entryPoints:
        - web
      middlewares:
        - redirect
        - csrf
        - auth
      service: angular

    web-angular-secure-router:
      rule: "Host(`meetup-search.de`)"
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - auth
      service: angular
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

    web-flask-router:
      rule: "(Host(`meetup-search.de`) && Method(`PUT`)) || (Host(`meetup-search.de`) && Path(`/login`)) || (Host(`meetup-search.de`) && Path(`/callback`))"
      entryPoints:
        - web
      middlewares:
        - redirect
        - csrf
        - auth
      service: flask

    web-flask-secure-router:
      rule: "(Host(`meetup-search.de`) && Method(`PUT`)) || (Host(`meetup-search.de`) && Path(`/login`)) || (Host(`meetup-search.de`) && Path(`/callback`))"
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - auth
      service: flask
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

  middlewares:
    redirect:
      # https://docs.traefik.io/master/middlewares/redirectscheme/
      redirectScheme:
        scheme: https
        permanent: true
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.flaskproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ["X-CSRFToken"]
    auth:
      basicAuth:
        usersFile: "/basic-auth-usersfile"

  services:
    flask:
      loadBalancer:
        servers:
          - url: http://flask:5000

    angular:
      loadBalancer:
        servers:
          - url: http://angular:80

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
